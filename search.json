[
  {
    "objectID": "getrails.html",
    "href": "getrails.html",
    "title": "路線名と駅名を調べる方法",
    "section": "",
    "text": "路線名と駅名を調べる方法\n\nここでは http://express.heartrails.com のAPIを利用します\n次の手順で行います。\n“路線”の検索については５行目の“都道府県名”を変更して実行します。\n\nimport requests\n\nurl = \"http://express.heartrails.com/api/json\"\n\nparam = {\"method\": \"getLines\", \"prefecture\": \"北海道\"}\ndata = requests.get(url, param).json()\nprint(\"路線名一覧:\")\nfor i in data[\"response\"][\"line\"]:\n    print(i)\n\n\n路線名一覧:\nJR函館支線\nJR函館本線\nJR千歳線\nJR宗谷本線\nJR室蘭支線\nJR室蘭本線\nJR富良野線\nJR日高本線\nJR札沼線\nJR根室本線\n道南いさりび鉄道線\nJR海峡線\nJR留萌本線\nJR石勝線\nJR石北本線\nJR釧網本線\n函館市電宝来・谷地頭線\n函館市電本線\n函館市電湯の川線\n札幌市南北線\n札幌市東西線\n札幌市東豊線\n札幌市電\n北海道新幹線\n\n\n“駅名”の検索については1行目の“路線名”を変更して実行します。\n\nparam = {\"method\": \"getStations\", \"line\": \"JR函館本線\" }\ndata = requests.get(url, param).json()\nprint(\"駅名と経度・緯度:\")\nfor i in data[\"response\"][\"station\"]:\n    print(i[\"name\"], i[\"x\"], i[\"y\"])\n\n駅名と経度・緯度:\n函館 140.726413 41.773709\n五稜郭 140.733539 41.803557\n桔梗 140.722952 41.846457\n大中山 140.71358 41.864641\n七飯 140.688556 41.886971\n新函館北斗 140.646525 41.9054\n仁山 140.635183 41.930011\n大沼 140.669347 41.971954\n大沼公園 140.669758 41.980958\n赤井川 140.642678 42.003267\n駒ヶ岳 140.610476 42.038809\n森 140.573846 42.108917\n石倉 140.458436 42.17285\n落部 140.420755 42.187617\n野田生 140.37586 42.217104\n山越 140.326593 42.231172\n八雲 140.273342 42.253391\n山崎 140.2746 42.314635\n黒岩 140.288173 42.368296\n国縫 140.320885 42.439319\n中ノ沢 140.346077 42.477928\n長万部 140.37507 42.512477\n二股 140.320821 42.575869\n黒松内 140.305704 42.669608\n熱郛 140.375084 42.675653\n目名 140.465742 42.761432\n蘭越 140.52894 42.804542\n昆布 140.596107 42.797984\nニセコ 140.684588 42.808746\n比羅夫 140.722615 42.84856\n倶知安 140.745471 42.90164\n小沢 140.677657 42.97185\n銀山 140.715321 43.040888\n然別 140.737211 43.12551\n仁木 140.770546 43.154091\n余市 140.794686 43.186558\n蘭島 140.854643 43.19651\n塩谷 140.924546 43.202406\n小樽 140.993653 43.197172\n南小樽 141.007883 43.186529\n小樽築港 141.029051 43.180752\n朝里 141.063923 43.176868\n銭函 141.159868 43.143403\nほしみ 141.191402 43.13373\n星置 141.210856 43.132375\n稲穂 141.222919 43.128115\n手稲 141.243785 43.120238\n稲積公園 141.257113 43.112023\n発寒 141.277273 43.099819\n発寒中央 141.294497 43.089271\n琴似 141.307418 43.081599\n桑園 141.332036 43.070744\n札幌 141.350768 43.068612\n苗穂 141.377522 43.068574\n白石 141.413612 43.054715\n厚別 141.46369 43.045154\n森林公園 141.481332 43.056456\n大麻 141.496925 43.072382\n野幌 141.52984 43.092559\n高砂 141.540752 43.100084\n江別 141.55679 43.110189\n豊幌 141.62466 43.136446\n幌向 141.655839 43.151348\n上幌向 141.715391 43.18183\n岩見沢 141.759359 43.204201\n峰延 141.814673 43.264694\n光珠内 141.844655 43.292658\n美唄 141.862157 43.330751\n茶志内 141.87336 43.369842\n奈井江 141.889115 43.423718\n豊沼 141.901032 43.464224\n砂川 141.909642 43.493468\n滝川 141.900807 43.555278\n江部乙 141.935937 43.627564\n妹背牛 141.966591 43.690841\n深川 142.041642 43.721021\n納内 142.130072 43.732509\n近文 142.325327 43.789193\n旭川 142.357803 43.763492"
  },
  {
    "objectID": "telnets_2023_09_07.html",
    "href": "telnets_2023_09_07.html",
    "title": "インターネット公告システム ホームページ",
    "section": "",
    "text": "インターネット公告システム ホームページ\n一般社団法人サイバー技術・インターネット自由研究会\n\nColab で開いてみます\n\n\n準備\ntelnet\n\n! apt install telnet\n\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nThe following additional packages will be installed:\n  netbase\nThe following NEW packages will be installed:\n  netbase telnet\n0 upgraded, 2 newly installed, 0 to remove and 16 not upgraded.\nNeed to get 79.9 kB of archives.\nAfter this operation, 200 kB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu jammy/main amd64 netbase all 6.3 [12.9 kB]\nGet:2 http://archive.ubuntu.com/ubuntu jammy/main amd64 telnet amd64 0.17-44build1 [66.9 kB]\nFetched 79.9 kB in 0s (411 kB/s)\nSelecting previously unselected package netbase.\n(Reading database ... 120901 files and directories currently installed.)\nPreparing to unpack .../archives/netbase_6.3_all.deb ...\nUnpacking netbase (6.3) ...\nSelecting previously unselected package telnet.\nPreparing to unpack .../telnet_0.17-44build1_amd64.deb ...\nUnpacking telnet (0.17-44build1) ...\nSetting up netbase (6.3) ...\nSetting up telnet (0.17-44build1) ...\nupdate-alternatives: using /usr/bin/telnet.netkit to provide /usr/bin/telnet (telnet) in auto mode\nProcessing triggers for man-db (2.10.2-1) ...\n\n\nOpenSSL\n\n! apt install openssl\n\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nopenssl is already the newest version (3.0.2-0ubuntu1.10).\nopenssl set to manually installed.\n0 upgraded, 0 newly installed, 0 to remove and 16 not upgraded.\n\n\n\n一応ログをとっておきます\n\n\nimport os\n_logconfpath = './log.conf'\n\nlogconfig = \"\"\"\n[loggers]\nkeys=root\n\n[handlers]\nkeys=rotatinghandler, timedrotatinghandler\n\n[formatters]\nkeys=_formatter\n\n[logger_root]\nlevel=DEBUG\nhandlers=rotatinghandler, timedrotatinghandler\n\n[handler_rotatinghandler]\nclass=handlers.RotatingFileHandler\nlevel=DEBUG\nformatter=_formatter\nargs=('./app.log', 'a', 1024*1024, 5, 'utf-8')\n\n[handler_timedrotatinghandler]\nclass=handlers.TimedRotatingFileHandler\nlevel=ERROR\nformatter=_formatter\nargs=('./rotation.log', 'S', 1024*1024, 5, 'utf-8')\n\n\n[formatter__formatter]\nformat=[%(process)d-%(thread)d]-%(asctime)s-[%(filename)s:%(lineno)d]-%(levelname)s-%(message)s\n\"\"\"\n\nf = open(_logconfpath, 'w')\nf.write(logconfig)\nf.close()\n\n\nログを初期化しておきます\n\n\nimport logging.config\nlogging.config.fileConfig(fname=_logconfpath)\n_logger = logging.getLogger(__name__)\n\n\n\n実行\n\nコンソールの中で”notalk”と入力するとチャット機能から離脱できます\n\n\n! openssl s_client -connect koukoku.shadan.open.ad.jp:992\n\nCONNECTED(00000003)\ndepth=2 C = US, O = Internet Security Research Group, CN = ISRG Root X1\nverify return:1\ndepth=1 C = US, O = Let's Encrypt, CN = R3\nverify return:1\ndepth=0 CN = koukoku.shadan.open.ad.jp\nverify return:1\n---\nCertificate chain\n 0 s:CN = koukoku.shadan.open.ad.jp\n   i:C = US, O = Let's Encrypt, CN = R3\n   a:PKEY: rsaEncryption, 2048 (bit); sigalg: RSA-SHA256\n   v:NotBefore: Sep  6 02:11:41 2023 GMT; NotAfter: Dec  5 02:11:40 2023 GMT\n 1 s:C = US, O = Let's Encrypt, CN = R3\n   i:C = US, O = Internet Security Research Group, CN = ISRG Root X1\n   a:PKEY: rsaEncryption, 2048 (bit); sigalg: RSA-SHA256\n   v:NotBefore: Sep  4 00:00:00 2020 GMT; NotAfter: Sep 15 16:00:00 2025 GMT\n---\nServer certificate\n-----BEGIN CERTIFICATE-----\nMIIFHTCCBAWgAwIBAgISAzUhRkrknor3ol5B44s9aQ16MA0GCSqGSIb3DQEBCwUA\nMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\nEwJSMzAeFw0yMzA5MDYwMjExNDFaFw0yMzEyMDUwMjExNDBaMCQxIjAgBgNVBAMT\nGWtvdWtva3Uuc2hhZGFuLm9wZW4uYWQuanAwggEiMA0GCSqGSIb3DQEBAQUAA4IB\nDwAwggEKAoIBAQC6kfQYdhh1dc27kFvnGs9QVzoDQwHWssdULYdmQ9EpTVa8USjp\nSqJr9er2cUTsY1mXnMea860YCpSy6OIg49iR8GLdKGQDJdL63UwFUxhf6Dao8lzg\noIL0XO4ixXFnzhb9jQAS9Imz24Qb/TpQnXlQXDnQazkchuV0BmpRdaqi53ZGa/Oh\nM+0/Rq+CxmEI5MkkWlbjRls6AttewA6IaW1sJEz033Ni0wHWrPmofeUxp970aaP6\nUPY7GrlpQjC8FgwEou4fRK6n3SHnPhOwnVSvo/V/QQuJpnkqeTM35DjVl1QHWYSg\nL6CeOyHtbaXqxL6FxKTB6nWHaUxM5414qsglAgMBAAGjggI5MIICNTAOBgNVHQ8B\nAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB\n/wQCMAAwHQYDVR0OBBYEFK/eBpftmzk/tkvHJdRvpeIXNZZwMB8GA1UdIwQYMBaA\nFBQusxe3WFbLrlAJQOYfr52LFMLGMFUGCCsGAQUFBwEBBEkwRzAhBggrBgEFBQcw\nAYYVaHR0cDovL3IzLm8ubGVuY3Iub3JnMCIGCCsGAQUFBzAChhZodHRwOi8vcjMu\naS5sZW5jci5vcmcvMEEGA1UdEQQ6MDiCGyoua291a29rdS5zaGFkYW4ub3Blbi5h\nZC5qcIIZa291a29rdS5zaGFkYW4ub3Blbi5hZC5qcDATBgNVHSAEDDAKMAgGBmeB\nDAECATCCAQUGCisGAQQB1nkCBAIEgfYEgfMA8QB3AHoyjFTYty22IOo44FIe6YQW\ncDIThU070ivBOlejUutSAAABimh5ZxkAAAQDAEgwRgIhALPI+efjp5aKiay9DXUA\nB4DK24AsWLa999PCSRJsQ5JJAiEA0p04mRvumhgc0OzbWO/A9NvAOCKQC7GKFh+D\nEReIa4wAdgC3Pvsk35xNunXyOcW6WPRsXfxCz3qfNcSeHQmBJe20mQAAAYpoeWcO\nAAAEAwBHMEUCIG/SBFRWFdfdL0Pzsjs318vQqkoyDvysovPOIApVdo+VAiEAnZC9\nb3RxLwAwV0nktaS+4U3JFqUon4Z8Yu7ynHbDuRIwDQYJKoZIhvcNAQELBQADggEB\nAC07jNIDCrAfMn/ZqNF3/Q25KzuV2711R6fA4OkVXiWzj0ojsQwOnasWJyL1FME3\n/g3ELVfvxYTEZDF2xkKeak1xekpku5eJRpj/XSSYFOPVwDvyYBeDF09zu8KM26fB\nSs/LTNLhE7B2+4Vzv+Fn+fsI8SZaG8h5X+fqrNBCEbu89YeMI3Hln9QznZjqaQHp\nxelUstypQ/ELHQt9P6Os0qc8cLdSeWJq9zj/Qqtc8ie0c1c0Ndb7+HYnQAxxCI24\nQq9lIylpmBnIuHY0YhmnDKUxb9RQ8Zqpfn8SLJjp6aQtnZMMjXwulvQBgmY/00OD\n4HSlPFLtIwhtEElYrjLNURo=\n-----END CERTIFICATE-----\nsubject=CN = koukoku.shadan.open.ad.jp\nissuer=C = US, O = Let's Encrypt, CN = R3\n---\nNo client certificate CA names sent\nPeer signing digest: SHA256\nPeer signature type: RSA-PSS\nServer Temp Key: X25519, 253 bits\n---\nSSL handshake has read 3164 bytes and written 391 bytes\nVerification: OK\n---\nNew, TLSv1.3, Cipher is TLS_AES_128_GCM_SHA256\nServer public key is 2048 bit\nSecure Renegotiation IS NOT supported\nCompression: NONE\nExpansion: NONE\nNo ALPN negotiated\nEarly data was not sent\nVerify return code: 0 (ok)\n---\n---\nPost-Handshake New Session Ticket arrived:\nSSL-Session:\n    Protocol  : TLSv1.3\n    Cipher    : TLS_AES_128_GCM_SHA256\n    Session-ID: 3D8CFBF11DFC0ED318ECC354F0F589E7FC853D7EAA267EE31105ADC48A0C0A6F\n    Session-ID-ctx: \n    Resumption PSK: 544C44410DD8770047BF210B43635B50E66631963208952EDA6A6E31767B7658\n    PSK identity: None\n    PSK identity hint: None\n    SRP username: None\n    TLS session ticket lifetime hint: 7200 (seconds)\n    TLS session ticket:\n    0000 - c2 10 80 1c 92 67 b3 3a-2e 29 8a 88 d3 25 5b e9   .....g.:.)...%[.\n    0010 - 6d 6e eb b3 16 2a 10 8b-42 53 0c c0 6b b7 61 e6   mn...*..BS..k.a.\n    0020 - bd 65 18 92 08 bc ef 09-b3 7b 33 be 5d 04 d5 25   .e.......{3.]..%\n    0030 - 1d 3f 8a 26 d4 3f 63 02-79 84 d6 c9 78 e3 00 1f   .?.&.?c.y...x...\n    0040 - 4a 1b c1 20 b7 64 c2 d2-69 ab bf 64 7d 3a 4f 49   J.. .d..i..d}:OI\n    0050 - 9b 06 a8 00 b5 95 26 f1-77 68 6d 65 c3 83 1d 08   ......&.whme....\n    0060 - 98 23 2b 28 cd 5c c0 fd-03 cb 3f a9 be 01 7d 6b   .#+(.\\....?...}k\n    0070 - dd 29 48 f5 80 8b d9 65-9a b4 bb a2 c3 7a a8 a0   .)H....e.....z..\n    0080 - 0c 41 f3 92 1b 4a a4 ea-39 7e 70 46 2c f5 6b eb   .A...J..9~pF,.k.\n    0090 - 9b 56 ae ad 7c 56 47 d1-bf c3 8c ce 92 39 37 22   .V..|VG......97\"\n    00a0 - 17 ea 01 fb bb ae e9 56-b4 c9 d6 10 d7 48 05 51   .......V.....H.Q\n\n    Start Time: 1694049107\n    Timeout   : 7200 (sec)\n    Verify return code: 0 (ok)\n    Extended master secret: no\n    Max Early Data: 0\n---\nread R BLOCK\n---\nPost-Handshake New Session Ticket arrived:\nSSL-Session:\n    Protocol  : TLSv1.3\n    Cipher    : TLS_AES_128_GCM_SHA256\n    Session-ID: 4C433A354B8805B8920E8762E168146D7D289189AE7B9BB53935D0EBAE702B27\n    Session-ID-ctx: \n    Resumption PSK: 554BD562CE1CAAEB86942DCEE07E1178F8622A0ED074FA3508A23387C45F7A93\n    PSK identity: None\n    PSK identity hint: None\n    SRP username: None\n    TLS session ticket lifetime hint: 7200 (seconds)\n    TLS session ticket:\n    0000 - c2 10 80 1c 92 67 b3 3a-2e 29 8a 88 d3 25 5b e9   .....g.:.)...%[.\n    0010 - e0 6e 84 81 fe a7 60 88-29 3b 3b ca 51 75 90 16   .n....`.);;.Qu..\n    0020 - a1 cc b5 42 e8 af e5 19-92 cc a3 73 51 43 0e d4   ...B.......sQC..\n    0030 - 2d 80 0b e0 df 94 fd 6b-e7 04 e5 37 96 02 f8 5e   -......k...7...^\n    0040 - 82 7e 71 08 fd 5d be 34-1a d9 af 43 db a2 3e 31   .~q..].4...C..&gt;1\n    0050 - b0 0d 46 5d b5 93 26 8e-36 d4 3e c1 02 9b 20 7c   ..F]..&.6.&gt;... |\n    0060 - ee 98 35 6e b5 0b 3e 2f-bb 8e 25 0e 8f a2 90 2c   ..5n..&gt;/..%....,\n    0070 - c2 2a 7e fd 29 8b 1d d2-21 60 56 1b 67 7b 1b b3   .*~.)...!`V.g{..\n    0080 - 80 4b 7c e9 bc c0 39 0f-57 ff e8 80 ac 18 f3 cb   .K|...9.W.......\n    0090 - 85 bc e6 51 ed 46 8e 53-bf bc 40 7b fe 77 f0 ec   ...Q.F.S..@{.w..\n    00a0 - 3e 55 51 4b 7e 95 82 21-2e 4c 3f 4e ee 88 e5 61   &gt;UQK~..!.L?N...a\n\n    Start Time: 1694049107\n    Timeout   : 7200 (sec)\n    Verify return code: 0 (ok)\n    Extended master secret: no\n    Max Early Data: 0\n---\nread R BLOCK\n﻿\n ■□■□■□■□■□■□■□■□■□■□■□■□■□■□■□\n ■□ You must use UTF-8 Encoding to view this page      ■□\n ■□                                                    ■□\n ■□ 一般社団法人サイバー技術・インターネット自由研究会 ■□\n ■□                                                    ■□\n\n&gt;&gt; 「 テスト 」(チャット放話 - 09/07 (木) 10:11:58 by ******* 君) &lt;&lt;\n\n ■□ インターネット公告システム ホームページへようこそ！■□\n ■□               W e l c o m e ! !                    ■□\n\n \n          最終更新日時 2023/09/07 (木) 07:44 (JST)\n \n          - TELNET over TLS/SSL (TCP Port 992) secure edition -\n \n          あなたは １１６７５１ 番目のアクセス人間です！！\n          Your ^C\n\n\n\n通信障害などがあったときは各ログ・ファイル（例:app.log）を確認します。（任意）\n\n\nimport logging\nlogging.basicConfig(\n    filename=\"app.log\",\n    level=logging.DEBUG,\n    force=True)\n\n^C"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Google Colaboratory Archives",
    "section": "",
    "text": "ワークショップなどで使用したものを陳列します"
  },
  {
    "objectID": "index.html#files",
    "href": "index.html#files",
    "title": "Google Colaboratory Archives",
    "section": "Files",
    "text": "Files\n\n\n\n\nFiles\n用途\n\n\n\n\n1\nColab接続\nGitHub上のファイルをColabから直接実行する下準備。\n\n\n2\nインターネット公告（simple）\nインターネット公告\n\n\n3\nインターネット公告（chat）\nインターネット公告\n\n\n4\nインターネット公告（no-talk）\nインターネット公告\n\n\n5\nColab - SSH\n今は「禁じ手」。学習用にしてください。\n\n\n6\n路線と駅名を調べる\n各都道府県の鉄道路線を探査。路線の駅名と駅の緯度・経度情報を取得できます。\n\n\n7\n・・・\n・・・\n\n\n8\n・・・\n・・・\n\n\n\n\nThis is a simple site created with Quarto."
  },
  {
    "objectID": "BaseGitHub2GoogleColaboratory.html",
    "href": "BaseGitHub2GoogleColaboratory.html",
    "title": "GitHub上のファイルをColabから直接実行する下準備",
    "section": "",
    "text": "GitHub上のファイルをColabから直接実行する下準備\nURLの前半部を置き換えることでアクセス可能なURLとなります。\n\nURLを置き換える\n① 可変　 ② 固定\n\n# ① github上のURL\np_url = \"https://github.com/watanabe3tipapa/GoogleColaboratory/blob/main/EtudeColabGoogleDriveAccess.ipynb\"\n\n# ②githubのコードをColabで実行するURLの取得\naft_url = p_url.replace('https://github.com', 'https://colab.research.google.com/github');\nprint(aft_url)\n\nhttps://colab.research.google.com/github/watanabe3tipapa/GoogleColaboratory/blob/main/EtudeColabGoogleDriveAccess.ipynb"
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "",
    "section": "",
    "text": "MIT License\nCopyright (c) 2021 Toru Watanabe\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "telnets_2023−09_07_notalk_by_Go.html",
    "href": "telnets_2023−09_07_notalk_by_Go.html",
    "title": "インターネット公告システム ホームページ",
    "section": "",
    "text": "インターネット公告システム ホームページ\n一般社団法人サイバー技術・インターネット自由研究会\n\n「電子公告」の閲覧用のクライアントです\n\n\n準備\nGoを実装します\n\n!apt-get install golang\n\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nThe following additional packages will be installed:\n  golang-1.18 golang-1.18-doc golang-1.18-go golang-1.18-src golang-doc\n  golang-go golang-src\nSuggested packages:\n  bzr | brz mercurial subversion\nThe following NEW packages will be installed:\n  golang golang-1.18 golang-1.18-doc golang-1.18-go golang-1.18-src golang-doc\n  golang-go golang-src\n0 upgraded, 8 newly installed, 0 to remove and 16 not upgraded.\nNeed to get 82.5 MB of archives.\nAfter this operation, 437 MB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 golang-1.18-doc all 1.18.1-1ubuntu1.1 [103 kB]\nGet:2 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 golang-1.18-src all 1.18.1-1ubuntu1.1 [16.2 MB]\nGet:3 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 golang-1.18-go amd64 1.18.1-1ubuntu1.1 [66.0 MB]\nGet:4 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 golang-1.18 all 1.18.1-1ubuntu1.1 [11.2 kB]\nGet:5 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang-src all 2:1.18~0ubuntu2 [4,438 B]\nGet:6 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang-go amd64 2:1.18~0ubuntu2 [41.8 kB]\nGet:7 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang-doc all 2:1.18~0ubuntu2 [2,784 B]\nGet:8 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang amd64 2:1.18~0ubuntu2 [2,732 B]\nFetched 82.5 MB in 1s (77.8 MB/s)\nSelecting previously unselected package golang-1.18-doc.\n(Reading database ... 120901 files and directories currently installed.)\nPreparing to unpack .../0-golang-1.18-doc_1.18.1-1ubuntu1.1_all.deb ...\nUnpacking golang-1.18-doc (1.18.1-1ubuntu1.1) ...\nSelecting previously unselected package golang-1.18-src.\nPreparing to unpack .../1-golang-1.18-src_1.18.1-1ubuntu1.1_all.deb ...\nUnpacking golang-1.18-src (1.18.1-1ubuntu1.1) ...\nSelecting previously unselected package golang-1.18-go.\nPreparing to unpack .../2-golang-1.18-go_1.18.1-1ubuntu1.1_amd64.deb ...\nUnpacking golang-1.18-go (1.18.1-1ubuntu1.1) ...\nSelecting previously unselected package golang-1.18.\nPreparing to unpack .../3-golang-1.18_1.18.1-1ubuntu1.1_all.deb ...\nUnpacking golang-1.18 (1.18.1-1ubuntu1.1) ...\nSelecting previously unselected package golang-src.\nPreparing to unpack .../4-golang-src_2%3a1.18~0ubuntu2_all.deb ...\nUnpacking golang-src (2:1.18~0ubuntu2) ...\nSelecting previously unselected package golang-go:amd64.\nPreparing to unpack .../5-golang-go_2%3a1.18~0ubuntu2_amd64.deb ...\nUnpacking golang-go:amd64 (2:1.18~0ubuntu2) ...\nSelecting previously unselected package golang-doc.\nPreparing to unpack .../6-golang-doc_2%3a1.18~0ubuntu2_all.deb ...\nUnpacking golang-doc (2:1.18~0ubuntu2) ...\nSelecting previously unselected package golang:amd64.\nPreparing to unpack .../7-golang_2%3a1.18~0ubuntu2_amd64.deb ...\nUnpacking golang:amd64 (2:1.18~0ubuntu2) ...\nSetting up golang-1.18-doc (1.18.1-1ubuntu1.1) ...\nSetting up golang-1.18-src (1.18.1-1ubuntu1.1) ...\nSetting up golang-src (2:1.18~0ubuntu2) ...\nSetting up golang-1.18-go (1.18.1-1ubuntu1.1) ...\nSetting up golang-1.18 (1.18.1-1ubuntu1.1) ...\nSetting up golang-go:amd64 (2:1.18~0ubuntu2) ...\nSetting up golang-doc (2:1.18~0ubuntu2) ...\nSetting up golang:amd64 (2:1.18~0ubuntu2) ...\nProcessing triggers for man-db (2.10.2-1) ...\n\n\n確認\n\n!go version\n\ngo version go1.18.1 linux/amd64\n\n\nテスト\n\n%%writefile helloworld.go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Printf(\"Hello World!\\n\")\n}\n\nWriting helloworld.go\n\n\n\n!go run helloworld.go\n\nHello World!\n\n\n\n\n実行\n\n%%writefile chat.go\npackage main\n\nimport (\n    \"bufio\"\n    \"crypto/tls\"\n    \"fmt\"\n    \"log\"\n    \"os\"\n    \"regexp\"\n    \"strings\"\n    \"sync\"\n)\n\nvar re = regexp.MustCompile(\"[\\u001B\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[a-zA-Z\\\\d]*)*)?\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PRZcf-ntqry=&gt;&lt;~]))\")\n\nfunc main() {\n    config := tls.Config{Certificates: []tls.Certificate{}, InsecureSkipVerify: false}\n    conn, err := tls.Dial(\"tcp\", \"koukoku.shadan.open.ad.jp:992\", &config)\n    if err != nil {\n        log.Fatalf(\"client: dial: %s\", err)\n    }\n    defer conn.Close()\n    log.Println(\"client: connected to: \", conn.RemoteAddr())\n    fmt.Fprintln(conn, \"notalk\")\n\n    var wg sync.WaitGroup\n    wg.Add(1)\n    go func() {\n        defer wg.Done()\n        scanner := bufio.NewScanner(conn)\n        for scanner.Scan() {\n            line := strings.TrimSpace(re.ReplaceAllString(scanner.Text(), \"\"))\n            fmt.Println(line)\n        }\n    }()\n\n    wg.Add(1)\n    go func() {\n        defer wg.Done()\n        scanner := bufio.NewScanner(os.Stdin)\n        for scanner.Scan() {\n            fmt.Fprintln(conn, scanner.Text())\n        }\n    }()\n\n    wg.Wait()\n}\n\nWriting chat.go\n\n\n\n!go run chat.go\n\n2023/09/07 02:39:01 client: connected to:  103.41.63.2:992\n﻿\n■□■□■□■□■□■□■□■□■□■□■□■□■□■□■□\n■□ You must use UTF-8 Encoding to view this page      ■□\n■□                                                    ■□\n■□ 一般社団法人サイバー技術・インターネット自由研究会 ■□\n■□                                                    ■□\n■□ インターネット公告システム ホームページへようこそ！■□\n■□               W e l c o m e ! !                    ■□\n■□■□■□■□■□■□■□■□■□■□■□■□■□■□■□\n\n最終更新日時 2023/09/07 (木) 11:17 (JST)\n\n- TELNET over TLS/SSL (TCP Port 992) secure edition -\n\nあなたは １１７５２０ 番目のアクセス人間です！！\nYour internet human number is #117520 !!\n\nＳｏｒｒｙ， Ｊａｐａｎｅｓｅ  ｌａｎｇｕａｇｅ  ｏｎｌｙ．\n\n次のとおり電子公告をします。\n\n★ 第Ｘ期 決算公告 ★\n202X 年 X 月 X 日  東京都新宿区○○\nsignal: interrupt\n\n\n\n^C"
  },
  {
    "objectID": "telnets_2023−09_07_chat_by_Go.html",
    "href": "telnets_2023−09_07_chat_by_Go.html",
    "title": "インターネット公告システム ホームページ",
    "section": "",
    "text": "インターネット公告システム ホームページ\n一般社団法人サイバー技術・インターネット自由研究会\n\nChat機能用のクライアントです\n\n\n準備\nGoを実装します\n\n!apt-get install golang\n\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nThe following additional packages will be installed:\n  golang-1.18 golang-1.18-doc golang-1.18-go golang-1.18-src golang-doc\n  golang-go golang-src\nSuggested packages:\n  bzr | brz mercurial subversion\nThe following NEW packages will be installed:\n  golang golang-1.18 golang-1.18-doc golang-1.18-go golang-1.18-src golang-doc\n  golang-go golang-src\n0 upgraded, 8 newly installed, 0 to remove and 16 not upgraded.\nNeed to get 82.5 MB of archives.\nAfter this operation, 437 MB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 golang-1.18-doc all 1.18.1-1ubuntu1.1 [103 kB]\nGet:2 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 golang-1.18-src all 1.18.1-1ubuntu1.1 [16.2 MB]\nGet:3 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 golang-1.18-go amd64 1.18.1-1ubuntu1.1 [66.0 MB]\nGet:4 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 golang-1.18 all 1.18.1-1ubuntu1.1 [11.2 kB]\nGet:5 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang-src all 2:1.18~0ubuntu2 [4,438 B]\nGet:6 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang-go amd64 2:1.18~0ubuntu2 [41.8 kB]\nGet:7 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang-doc all 2:1.18~0ubuntu2 [2,784 B]\nGet:8 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang amd64 2:1.18~0ubuntu2 [2,732 B]\nFetched 82.5 MB in 1s (56.8 MB/s)\nSelecting previously unselected package golang-1.18-doc.\n(Reading database ... 120901 files and directories currently installed.)\nPreparing to unpack .../0-golang-1.18-doc_1.18.1-1ubuntu1.1_all.deb ...\nUnpacking golang-1.18-doc (1.18.1-1ubuntu1.1) ...\nSelecting previously unselected package golang-1.18-src.\nPreparing to unpack .../1-golang-1.18-src_1.18.1-1ubuntu1.1_all.deb ...\nUnpacking golang-1.18-src (1.18.1-1ubuntu1.1) ...\nSelecting previously unselected package golang-1.18-go.\nPreparing to unpack .../2-golang-1.18-go_1.18.1-1ubuntu1.1_amd64.deb ...\nUnpacking golang-1.18-go (1.18.1-1ubuntu1.1) ...\nSelecting previously unselected package golang-1.18.\nPreparing to unpack .../3-golang-1.18_1.18.1-1ubuntu1.1_all.deb ...\nUnpacking golang-1.18 (1.18.1-1ubuntu1.1) ...\nSelecting previously unselected package golang-src.\nPreparing to unpack .../4-golang-src_2%3a1.18~0ubuntu2_all.deb ...\nUnpacking golang-src (2:1.18~0ubuntu2) ...\nSelecting previously unselected package golang-go:amd64.\nPreparing to unpack .../5-golang-go_2%3a1.18~0ubuntu2_amd64.deb ...\nUnpacking golang-go:amd64 (2:1.18~0ubuntu2) ...\nSelecting previously unselected package golang-doc.\nPreparing to unpack .../6-golang-doc_2%3a1.18~0ubuntu2_all.deb ...\nUnpacking golang-doc (2:1.18~0ubuntu2) ...\nSelecting previously unselected package golang:amd64.\nPreparing to unpack .../7-golang_2%3a1.18~0ubuntu2_amd64.deb ...\nUnpacking golang:amd64 (2:1.18~0ubuntu2) ...\nSetting up golang-1.18-doc (1.18.1-1ubuntu1.1) ...\nSetting up golang-1.18-src (1.18.1-1ubuntu1.1) ...\nSetting up golang-src (2:1.18~0ubuntu2) ...\nSetting up golang-1.18-go (1.18.1-1ubuntu1.1) ...\nSetting up golang-1.18 (1.18.1-1ubuntu1.1) ...\nSetting up golang-go:amd64 (2:1.18~0ubuntu2) ...\nSetting up golang-doc (2:1.18~0ubuntu2) ...\nSetting up golang:amd64 (2:1.18~0ubuntu2) ...\nProcessing triggers for man-db (2.10.2-1) ...\n\n\n確認\n\n!go version\n\ngo version go1.18.1 linux/amd64\n\n\nテスト\n\n%%writefile helloworld.go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Printf(\"Hello World!\\n\")\n}\n\nOverwriting helloworld.go\n\n\n\n!go run helloworld.go\n\nHello World!\n\n\n\n\n実行\n\n%%writefile chat.go\npackage main\n\nimport (\n    \"bufio\"\n    \"crypto/tls\"\n    \"fmt\"\n    \"log\"\n    \"os\"\n    \"regexp\"\n    \"strings\"\n    \"sync\"\n)\n\nvar re = regexp.MustCompile(\"[\\u001B\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[a-zA-Z\\\\d]*)*)?\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PRZcf-ntqry=&gt;&lt;~]))\")\n\nfunc main() {\n    config := tls.Config{Certificates: []tls.Certificate{}, InsecureSkipVerify: false}\n    conn, err := tls.Dial(\"tcp\", \"koukoku.shadan.open.ad.jp:992\", &config)\n    if err != nil {\n        log.Fatalf(\"client: dial: %s\", err)\n    }\n    defer conn.Close()\n    log.Println(\"client: connected to: \", conn.RemoteAddr())\n    fmt.Fprintln(conn, \"nobody\")\n\n    var wg sync.WaitGroup\n    wg.Add(1)\n    go func() {\n        defer wg.Done()\n        scanner := bufio.NewScanner(conn)\n        for scanner.Scan() {\n            line := strings.TrimSpace(re.ReplaceAllString(scanner.Text(), \"\"))\n            fmt.Println(line)\n        }\n    }()\n\n    wg.Add(1)\n    go func() {\n        defer wg.Done()\n        scanner := bufio.NewScanner(os.Stdin)\n        for scanner.Scan() {\n            fmt.Fprintln(conn, scanner.Text())\n        }\n    }()\n\n    wg.Wait()\n}\n\nOverwriting chat.go\n\n\n\n!go run chat.go\n\n2023/09/07 02:15:33 client: connected to:  103.41.63.2:992\n﻿\n&gt;&gt;チャットクライアントです。by watanabe3tipapa &lt;&lt;\nsignal: interrupt\n\n\n\n^C"
  },
  {
    "objectID": "method4colab_ssh.html",
    "href": "method4colab_ssh.html",
    "title": "Google ColaboratoryにSSH接続する方法（ngrok）",
    "section": "",
    "text": "Google ColaboratoryにSSH接続する方法（ngrok）\n\n【前提】　ngrokのアカウントを作成し、auth_tokenを準備してあること\n\n\n以下の手順でセットアップしていきます。\n組み込むものはお好みで（以下はサンプル）\n\nimport random, string, urllib.request, json, getpass, time\n\n\nngrokのauth_tokenをあらかじめ登録しておきます。\n\n\nauth_token=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n\n\n#Generate root password\npassword = ''.join(random.choice(string.ascii_letters + string.digits) for i in range(20))\n\n\n#Download ngrok\n! wget -q -c -nc https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip\n! unzip -qq -n ngrok-stable-linux-amd64.zip\n\n\n#Setup sshd\n! apt-get install -qq -o=Dpkg::Use-Pty=0 openssh-server pwgen &gt; /dev/null\n\n\nCreating config file /etc/ssh/sshd_config with new version\nCreating SSH2 RSA key; this may take some time ...\n2048 SHA256:Pt+FR5uEmWBtStBRnp8O22hy6duF+nAHsNB38+m7X0E root@4ea8a4d2a0a8 (RSA)\nCreating SSH2 ECDSA key; this may take some time ...\n256 SHA256:InYyJSIyzD3oKbVUaFsoTjwHBGSJ7joB08ez4SGV6lg root@4ea8a4d2a0a8 (ECDSA)\nCreating SSH2 ED25519 key; this may take some time ...\n256 SHA256:yE4VGfmLCmIhejMX18mDn5ChzpJcOArnV3QcqQh2UQk root@4ea8a4d2a0a8 (ED25519)\nCreated symlink /etc/systemd/system/sshd.service → /lib/systemd/system/ssh.service.\nCreated symlink /etc/systemd/system/multi-user.target.wants/ssh.service → /lib/systemd/system/ssh.service.\ninvoke-rc.d: could not determine current runlevel\ninvoke-rc.d: policy-rc.d denied execution of start.\n\n\n\n#Set root password\n! echo root:$password | chpasswd\n! mkdir -p /var/run/sshd\n! echo \"PermitRootLogin yes\" &gt;&gt; /etc/ssh/sshd_config\n! echo \"PasswordAuthentication yes\" &gt;&gt; /etc/ssh/sshd_config\n! echo \"LD_LIBRARY_PATH=/usr/lib64-nvidia\" &gt;&gt; /root/.bashrc\n! echo \"export LD_LIBRARY_PATH\" &gt;&gt; /root/.bashrc\n\n\n#Run sshd\nget_ipython().system_raw('/usr/sbin/sshd -D &')\ntime.sleep(5)\n\n\n#Create tunnel\nget_ipython().system_raw(f\"./ngrok authtoken {auth_token} && ./ngrok tcp 22 &\")\ntime.sleep(5)\n\n\n!ps -aux\n\nUSER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot           1  0.2  0.0    992     4 ?        Ss   11:22   0:00 /sbin/docker-\nroot           8  0.3  0.3 339816 50360 ?        Sl   11:22   0:00 /tools/node/b\nroot          18  0.2  0.0  35888  4872 ?        Ss   11:22   0:00 tail -n +0 -F\nroot          29  3.0  0.0      0     0 ?        Z    11:22   0:06 [python3] &lt;de\nroot          30  0.2  0.3 160408 41136 ?        S    11:22   0:00 python3 /usr/\nroot          55  0.8  0.4 203824 60476 ?        Sl   11:22   0:01 /usr/bin/pyth\nroot          56  0.0  0.0 707652  9112 ?        Sl   11:22   0:00 /usr/local/bi\nroot          73  7.5  0.7 469704 93492 ?        Ssl  11:25   0:02 /usr/bin/pyth\nroot          93  0.4  0.1 128152 15536 ?        Sl   11:25   0:00 /usr/bin/pyth\nroot         110 16.6  1.0 518612 141524 ?       Sl   11:25   0:04 node /datalab\nroot         707  0.0  0.0  95528  8812 ?        S    11:25   0:00 /usr/sbin/ssh\nroot         711  0.0  0.0  39196  2908 ?        S    11:25   0:00 /bin/bash -c \nroot         720  4.8  0.1 726652 25128 ?        Sl   11:25   0:00 ./ngrok tcp 2\nroot         728  0.0  0.0  59036  6408 ?        R    11:26   0:00 ps -aux\n\n\n\n#Get public address and print connect command\nwith urllib.request.urlopen('http://localhost:4040/api/tunnels') as response:\n  data = json.loads(response.read().decode())\n  (host, port) = data['tunnels'][0]['public_url'][6:].split(':')\n  print(f'SSH command: ssh -p{port} root@{host}')\n\n#Print root password\nprint(f'Root password: {password}')\n\nSSH command: ssh -p19516 root@6.tcp.ngrok.io\nRoot password: zpB2wixlG9cNtB9WJMZd\n\n\n上記の”出力結果”をコマンドラインに入力しSSH接続します"
  }
]